# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one that's appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Python to Linux Web App on Azure

trigger:
- main

variables:
  # USAMOS LA CONEXIÓN VÁLIDA QUE TIENES EN AZURE DEVOPS
  azureServiceConnectionId: 'Conexion-Flask-Students' 
  # NOMBRE DE TU APP SERVICE
  webAppName: 'mi-flask-app-2025' 
  # GRUPO DE RECURSOS (AJUSTA ESTE VALOR)
  resourceGroup: 'bases-de-datos' 
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.10'

stages:
- stage: Build
  displayName: '1. Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build on Default Agent'
    pool: Default 
    steps:
    
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python 3.10'

    - task: ArchiveFiles@2
      displayName: 'Archive project files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/drop.zip'
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)/drop.zip'
      artifact: drop
      displayName: 'Publish deployment package'

- stage: Deploy
  displayName: '2. Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Azure Web App'
    pool: Default 
    steps:
    - download: current
      artifact: drop
      displayName: 'Download build artifacts'
      
    # CLAVE 1: Configurar Gunicorn y forzar instalación de requirements.txt
    - task: AzureAppServiceSettings@1
      displayName: 'Configure App Settings and Startup Command'
      inputs:
        azureSubscription: '$(azureServiceConnectionId)'
        appName: '$(webAppName)'
        resourceGroupName: '$(resourceGroup)'
        # --- CORRECCIÓN: USAR SINTAXIS DE OBJETO SIMPLE ---
        appSettings: '
          [
            {"name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true", "slotSetting": false}
          ]
        '
        # ----------------------------------------------------
        startupCommand: 'gunicorn --bind=0.0.0.0 --timeout 600 app:app'

    # CLAVE 2: Despliegue
    - task: AzureWebApp@1
      displayName: 'Deploy to Azure Web App'
      inputs:
        azureSubscription: '$(azureServiceConnectionId)'
        appType: 'webAppLinux' 
        appName: '$(webAppName)'
        package: '$(Pipeline.Workspace)/drop/drop.zip'
        deploymentMethod: 'zipDeploy'
        runtimeStack: 'PYTHON|3.10'